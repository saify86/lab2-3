-- 1) Просмотрите существующие роли в БД.
SELECT rolname FROM pg_roles;

-- 2) Создание отдельных ролей на чтение, вставку, обновление и удаление данных таблиц для схемы.
-- Создание ролей
CREATE ROLE read_access;
CREATE ROLE insert_access;
CREATE ROLE update_access;
CREATE ROLE delete_access;

-- Предоставление прав ролям
GRANT SELECT ON ALL TABLES IN SCHEMA public TO read_access;
GRANT INSERT ON ALL TABLES IN SCHEMA public TO insert_access;
GRANT UPDATE ON ALL TABLES IN SCHEMA public TO update_access;
GRANT DELETE ON ALL TABLES IN SCHEMA public TO delete_access;

SELECT rolname FROM pg_roles;

-- 3) Создание пользователя с возможностью подключения к БД и присвоение прав на создание и изменение БД.
-- Создание пользователя
CREATE USER new_user WITH PASSWORD 'password1';

-- Предоставление прав на подключение к БД и создание/изменение БД
ALTER USER new_user CREATEDB CREATEROLE;

SELECT rolname FROM pg_roles;

-- 4) Изменение пароля для созданного пользователя, определение срока действия пароля.
-- Изменение пароля пользователя и установление срока действия пароля на 30 дней
ALTER USER new_user WITH PASSWORD 'password2';
ALTER USER new_user VALID UNTIL '2024-06-18';  -- Пример даты через 30 дней

SELECT rolname FROM pg_roles;

-- 5) Создание пользователя Admin и предоставление полного доступа к БД.
-- Создание пользователя Admin
CREATE USER admin WITH PASSWORD 'adminpassword';

-- Предоставление всех прав пользователю Admin
GRANT ALL PRIVILEGES ON DATABASE gto TO admin;
ALTER USER admin WITH SUPERUSER;

SELECT rolname FROM pg_roles;

-- 6) Вход под учетной записью Admin и создание пользователя User с ролью только для чтения.
-- Подключение под пользователем Admin

-- Создание пользователя User
CREATE USER user WITH PASSWORD 'userpassword';

-- Присвоение роли только для чтения
GRANT read_access TO user;

-- 7) Запрет просмотра определенных таблиц и столбцов пользователем User
-- Запретить доступ к определённой таблице
REVOKE SELECT ON TABLE norms FROM user;

-- Запретить доступ к определённым столбцам
REVOKE SELECT (award) ON TABLE results FROM user;

-- 8) Создание пользователя Manager и предоставление прав на просмотр и обновление записей.
-- Создание пользователя Manager
CREATE USER manager WITH PASSWORD 'password';

-- Присвоение ролей для просмотра и обновления записей
GRANT read_access TO manager;
GRANT update_access TO manager;

--Просмотр ролей пользователя manager
SELECT rolname FROM pg_roles WHERE pg_has_role('manager', oid, 'member');

-- 9) Удаление пользователя Manager.
-- Завершение всех соединений пользователя Manager
SELECT pg_terminate_backend(pg_stat_activity.pid)
FROM pg_stat_activity
WHERE pg_stat_activity.usename = 'manager';

-- Удаление пользователя
DROP USER manager;

SELECT rolname FROM pg_roles;

-- 10) Создание группы ролей managers и предоставление ей прав на чтение, вставку и обновление записей.
-- Создание группы ролей
CREATE ROLE managers;

-- Присвоение прав группе ролей
GRANT read_access TO managers;
GRANT insert_access TO managers;
GRANT update_access TO managers;

SELECT rolname FROM pg_roles;

-- 11) Восстановление пользователя Manager и добавление его в группу ролей managers.
-- Создание пользователя Manager
CREATE USER manager WITH PASSWORD 'password';

-- Добавление пользователя в группу ролей managers
GRANT managers TO manager;

SELECT rolname FROM pg_roles;
SELECT * FROM information_schema.role_table_grants WHERE grantee = 'manager';

-- 12) Создание пользователя с правами на чтение, вставку, обновление и удаление данных для разных таблиц без добавления в группу ролей.
-- Создание пользователя
CREATE USER specific_user WITH PASSWORD 'spassword';

-- Присвоение прав пользователю на уровне отдельных таблиц
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE age_groups TO specific_user;
GRANT SELECT, INSERT ON TABLE norms TO specific_user;
GRANT UPDATE, DELETE ON TABLE results TO specific_user;

SELECT rolname FROM pg_roles;













